#include <asm.h>
#include <iostream>

int main(int argc, char const *argv[])
{
    Assembler assembler;
    auto mCode = assembler.PPC(
        std::wstring(
            L""
            "stwu r1, -32(r1)\n"
            "mflr r0\n"
            "stw r0, 36(r1)\n"
            "stw r13, 28(r1)\n"
            "stw r14, 24(r1)\n"
            "stw r15, 20(r1)\n"
            "li r14, 1\n"
            "stw r14, 16(r1)\n"
            "lwz r14, 16(r1)\n"
            "stw r14, 12(r1)\n"
            "li r14, 2\n"
            "stw r14, 8(r1)\n"
            "li r14, 0\n"
            "lwz r14, 12(r1)\n"
            "add r14, r14, r14\n"
            "lwz r14, 8(r1)\n"
            "add r14, r14, r14\n"
            "stw r14, 16(r1)\n"
            "lwz r14, 16(r1)\n"
            "stw r14, 12(r1)\n"
            "li r14, 2\n"
            "stw r14, 8(r1)\n"
            "lis r14, 65535\n"
            "ori r14, r14, 65535\n"
            "stw r14, 4(r1)\n"
            "li r14, 1\n"
            "lwz r14, 8(r1)\n"
            "mullw r14, r14, r14\n"
            "lwz r14, 4(r1)\n"
            "mullw r14, r14, r14\n"
            "stw r14, 8(r1)\n"
            "li r14, 0\n"
            "lwz r14, 12(r1)\n"
            "add r14, r14, r14\n"
            "lwz r14, 8(r1)\n"
            "add r14, r14, r14\n"
            "stw r14, 16(r1)\n"
            "lwz r14, 16(r1)\n"
            "stw r14, 12(r1)\n"
            "li r14, 2\n"
            "stw r14, 8(r1)\n"
            "li r14, 1\n"
            "lwz r14, 12(r1)\n"
            "mullw r14, r14, r14\n"
            "lwz r14, 8(r1)\n"
            "mullw r14, r14, r14\n"
            "stw r14, 16(r1)\n"
            "lwz r14, 16(r1)\n"
            "stw r14, 12(r1)\n"
            "li r14, 2\n"
            "stw r14, 8(r1)\n"
            "li r14, 1\n"
            "lwz r14, 12(r1)\n"
            "mullw r14, r14, r14\n"
            "lwz r14, 8(r1)\n"
            "divw r14, r14, r14\n"
            "stw r14, 16(r1)\n"
            "lwz r14, 16(r1)\n"
            "stw r14, 12(r1)\n"
            "li r14, 2\n"
            "stw r14, 8(r1)\n"
            "li r14, 0\n"
            "lwz r14, 12(r1)\n"
            "add r14, r14, r14\n"
            "lwz r14, 8(r1)\n"
            "add r14, r14, r14\n"
            "stw r14, 16(r1)\n"
            "lwz r14, 16(r1)\n"
            "stw r14, 12(r1)\n"
            "li r14, 2\n"
            "stw r14, 8(r1)\n"
            "li r14, 0\n"
            "lwz r14, 12(r1)\n"
            "add r14, r14, r14\n"
            "lwz r14, 8(r1)\n"
            "add r14, r14, r14\n"
            "stw r14, 16(r1)\n"
            "# if\n"
            "lwz r13, 16(r1)\n"
            "li r14, 0\n"
            "cmplw r13, r14\n"
            "beq if_0, cr0\n"
            "b endif_0\n"
            "if_0:\n"
            "endif_0:\n"
            "# fi\n"
            "# for  range\n"
            "li r3, 2\n"
            "stw r3, 12(r1)\n"
            "loop_0:\n"
            "lwz r3, 12(r1)\n"
            "addi r3, r3, 1\n"
            "cmplwi r3, 1\n"
            "stw r3, 12(r1)\n"
            "blt loop_0\n"
            "lwz r14, 24(r1)\n"
            "lwz r15, 20(r1)\n"
            "__ret:\n"
            "lwz r0, 36(r1)\n"
            "lwz r13, 28(r1)\n"
            "mtlr r0\n"
            "addi r1, r1, 32\n"
            "blr\n"));
    for (auto inst : mCode)
    {
        std::wcout << inst << " ";
    }
    return 0;
}
